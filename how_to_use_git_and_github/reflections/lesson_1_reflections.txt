Q: How did viewing a diff between two versions of a file help you see the bug
that was introduced?

A: It called out specific places where the code differed between the 2 files,
greatly helping to narrow down where to look for the bug.

Q: How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

A: It would speed up the development workflow by removing the need for multiple
versions of the same file, allowing freedom to change files without fear of
losing code that existed in previous versions.

Q: What do you think are the pros and cons of manually choosing when to create
a commit, like you do in Git, vs having versions automatically saved, like
Google Docs does?

A: You don't have an enormous amount of unnecessary versions, especially if you
use the Undo command in your file to revert something you just did. If that
file were auto-saved, you may have 2 of the same version, with a version in
between that has the item you undid.

Q: Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each
file separately?

A: So you can save projects as one cohesive commit rather than as individual
components.

Q: How can you use the commands git log and git diff to view the history
of files?

A: Using git log shows a good overview of the commits with their ids, and git
diff shows exactly what changed between specified commits.

Q: How might using version control make you more confident to make changes that
could break something?

A: You can always revert back to a previous version that worked before things
were broken.

Q: Now that you have your workspace set up, what do you want to try using
Git for?

A: I've been using it a lot already. I want to get better at it.
